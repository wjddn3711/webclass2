day 01

웹개발

곽지현
DBMS, HTML, CSS, Javascript

10/12 ~ 11/8



1. java

1-1 자료형 (data type)
	- boolean
	- char (실무에서 쓸일 거의없다 문자열은 String으로)
정수형	
	- byte
	- short
	- int ★
	- long
	- float
	- double


1-2 대입 연산자 (=)

1-3 사칙 연산자 (+,-,*,/,%)

1-4 단항 연산자 (+=, -=, *=, /=, %=)

1-5 증감 연산자 (x++, ++x / x--, --x) 기호가 어디에 있으냐에 따라 증감은 다르게 일어난다

1-6 비교 연산자 (==, !=, >, >=, <, <=)

1-7 논리 연산자 (AND(&&), OR(||))

1-8 형 변환 - 암묵적 형변환, 명시적 형변환 (데이터 손실이 있는지 없는지 판단)

1-9 조건문 	- if 문
		- if ~ else
		- if ~ else if ~ else
		- switch
		
1-10 반복문	- for
		- while 
		- do~ while
		- 무한 루프★ (배포시 이러한 실수는 절대 있어선 안된다)

1-11 배열★	변수 그룹을 묶은 것
		1차 배열, 2차 배열
		- 배열의 인덱스 : 0~ (배열이름.length-1)
		
1-12 메서드	- main() 프로그램의 시작점을 명시한다 : 프로그램의 시작점
		- public static void 메서드이름(){} 선언
		- 메서드 이름(); 호출
		
		- public static void 메서드이름(변수형 변수이름(파라미터), 파라미터, ... ){}
		- 메서드 이름(값1, 값2,...);
		
		- public static 리턴형 메서드이름(){ return k; }
		- 메서드 이름();

1-13 클래스	- 객체를 생성, 객체지향 언어 (자바는 객체지향 언어로 쓰지만 함수지향으로 쓸수도 있다)
		- 객체이름.멤버변수;
		- 객체이름.메서드이름();
		- this : 자기자신을 표현 ( 내자신의 생성자를 호출 )
		- getter, setter : JavaBeans (변수 선언 단위) 
		- 생성자 ★★★ (생성자가 필요한 이유)

1-14 은닉성	- ★public(어디서든 가능), ★private(클래스 내부에서만 가능), protected, default (클래스에서는 별만 가능하다)
		
1-15 상속성	- 자식클래스 extends 부모클래스

1-16 오버라이드(Override)★★	- 부모의 기능 재정의
				- @Override (어노테이션으로 옵션을 준다)
				- super : 부모클래스를 가리킨다 

1-17 오버로드(Overload)★	- 동일한 이름의 메서드가 존재하는 예외적인 처리 기법  

1-18 객체 형변환		- Parent parent = new Child();
			>> 암묵적 형 변환
			- Child child = (child)parent;
			>> 명시적 형 변환
			- instanceof 연산자 : 어떤 객체 출신인지 나타내주는 연산자

1-19 추상화	- 상속 처리시, Override 강제하기
		- abstract 라는 키워드 사용

1-20 인터페이스	- 완벽한 추상화
		- implements 이용하여 상속을 받는데 다중 상속이 가능하다 (실무에서 인터페이스를 많이 사용)
		
1-21 static	- 고정영역(static), 동적영역
		- 접근범위: 전프로젝트 전반

1-22 패키지	- 자바 클래스의 묶음 단위
		- 각각의 클래스 성격에 맞게 폴더로 묶는 행위에 가깝다
		- 프로젝트의 아이덴티티를 명시한다
		- import 

1-23 ClassPath	- *.class (패키지 경로와 동일한 위치에 쌓인다)

1-24 lib	- *.jar 
		- API 개발을 위해 기본적으로 쓰이는 것 ★★★
			>> 우리가 사용하는 JDK 안에는 이미 수많은 라이브러리가 포함되어 있고, 이 라이브러리 안에는 프로그램 개발에 필요한 패키지	
			들이 기본적으로 포함되어있다
			>> 이렇게 프로그램 개발을 위하여 기본적으로 제공되는 기능들을 API
			>> API 문서는 개발한 기능들에 대한 설명

1-25 	Wrapper ★★★	
	Math
	String
	Scanner
	Calendar - Single Tone (디자인 패턴) 으로 만들어진 것

1-26 정규표현식	

1-27 예외처리(Exception)	- 모든 메서드는 예외처리가 되어있어야 한다.
				- NullPointerException ★★ : 어떠한 변수에 NULL이 있다, 할당되지 않은 데이터를 어떤 것을 하려고 하면 
								예외발생

1-28 컬렉션 프레임워크	- List > ArrayList (데이터를 객체화해서 담기에 좋기에 자주 쓰인다) 
				>> 인덱스 값으로 관리, 순서 있고, 중복 허용
			- Map > HashMap
				>> 키 값으로 관리, 순서 없고, 중복 허용 안함

1-29 파일 입춣력		- InputStream, OutputStream


2. 데이터베이스 개요

2-1 자료(Data)
	관찰이나 측정을 통해 수집한 단순한 사실이나 값

2-2 정보(information)
	- 의사 결정에 도움을 줄 수 있는 유용한 형태
	- 자료를 가공 (처리)해서 얻을 수 있는 결과를 의미

2-3 데이터베이스
	- 어느 한 조직체의 여러 응용 시스템이 공동으로 사용할 수 있도록 통합하여 저장한 운영데이터의 집합
	- 공동의 목적을 지원하기 위한 서로 관련된 자료들의 모임

3. DBMS

3-1 DBMS(database Management System)
	-사용자에게 데이터베이스를 생성하고 유지할 수 있게 하는 프로그램 집합
	-DBMS 는 데이터베이스 언어를 갖고 있으며 이를 통해 데이터의 삽입/삭제/수정/조회 등을 할 수 있다

4. 데이터베이스 모델의 종류
	- 계층형데이터 모델
	- 망 데이터 모델
	- 관계 데이터 모델(Relational Data Model)
		>> 개체 집합에 대한 속성 관계를 표현하기 위하여 개체를 테이블(table)로 사용하고 개체 집합들 사이의 관계는
		공통 속성으로 연결하는 독립된 형태의 데이터모델

5.  관계형 모델의 구성요소

5-1 관계형 데이터 모델의 용어
	- 테이블(table)
	- 열(column)
	- 행(row)



6. SQL

6-1 SQL이란 무엇인가?
	- SQL 은 관계형 데이터베이스 언어이다
	- 데이터의 삽입, 삭제, 갱신, 질의, 보호(보안) 명령등으로 구성
	- SQL은 관계 데이터베이스, 언어로 비절차적 데이터베이스 언어로 분류한다

6-2 SQL 기능에 따른 분류
	- 데이터 정의어 (DDL)
		>> 테이블이나 관계의 구조를 생성하는데 사용하며 
		CREATE, ALTER, DROP 문 등이 있음

	- 데이터 조작어 (DML)
		>> 테이블에 데이터를 검색, 삽입, 수정, 삭제 하는데 사용하며 
		SELECT(r), INSERT(c), DELETE(d), UPDATE(u)문 등이 있다

	- 데이터 제어어 (DCL)
		>> 데이터의 사용 권환을 관리하는데 사용하며 GRANT, REVOKE 등이 있다

