SELECT 	*
FROM 	EMPLOYEES;


SELECT EMPLOYEE_ID , CONCAT(CONCAT(FIRST_NAME,' '),LAST_NAME) name 
FROM EMPLOYEES e ;

SELECT EMPLOYEE_ID , FIRST_NAME , LAST_NAME 
FROM EMPLOYEES 
WHERE FIRST_NAME ='Lex';

SELECT EMPLOYEE_ID ,LAST_NAME , EMAIL 
FROM EMPLOYEES 
WHERE LAST_NAME ='Smith';

SELECT *
FROM JOB_HISTORY ;

SELECT A.employee_id AS employID, CONCAT( CONCAT (A.FIRST_NAME,' '),A.LAST_NAME ) AS NAME, B.job_id AS job
FROM EMPLOYEES A JOIN JOB_HISTORY B ON A.EMPLOYEE_ID = B.EMPLOYEE_ID ; 

SELECT *
FROM EMPLOYEES e 
ORDER BY hire_date ASC;

SELECT *
FROM EMPLOYEES e 
ORDER BY hire_date DESC;

-- as : 별칭, 알리아스
SELECT e.EMPLOYEE_ID , e.FIRST_NAME 
FROM EMPLOYEES e 
;

SELECT 	e.EMPLOYEE_ID AS "ID", 
		e.FIRST_NAME AS "NAME",
		e.SALARY 
FROM 	EMPLOYEES e 
;

SELECT 	e.EMPLOYEE_ID AS "ID", 
		e.FIRST_NAME AS "NAME",
		e.SALARY 
FROM 	EMPLOYEES e 
;

-- distinct : 중복 제거
SELECT 	DISTINCT JOB_ID 
FROM 	EMPLOYEES e ;

-- >= <=
SELECT 	*
FROM 	EMPLOYEES e 
WHERE 	SALARY >=5000
;


-- and 
SELECT e.EMPLOYEE_ID , d.DEPARTMENT_NAME 
FROM DEPARTMENTS d, EMPLOYEES e 
;

SELECT	* 
FROM 	EMPLOYEES e 
WHERE 	DEPARTMENT_ID = 50
AND		JOB_ID = 'SH_CLERK'
;


-- or 
-- employees 테이블에서 departmen_id 가 50이거나
-- manager_id 가 100인 사람의 FIRST_name, last_name, manager_id, department_id
SELECT 	CONCAT(CONCAT(e.FIRST_NAME,' '),e.LAST_NAME) AS NAME ,MANAGER_ID ,DEPARTMENT_ID 
FROM 	EMPLOYEES e 
WHERE 	DEPARTMENT_ID = 50
OR 		MANAGER_ID =100;

-- not, <>
-- employee 테이블에서 department id 가 50 이 아닌경우
SELECT *
FROM EMPLOYEES e 
WHERE NOT (DEPARTMENT_ID =50)
;
SELECT *
FROM EMPLOYEES e 
WHERE DEPARTMENT_ID <> 50
;

-- salary 4000~ 8000
SELECT 		*
FROM 		EMPLOYEES e 
WHERE 		SALARY 
BETWEEN 	4000 AND 8000;

SELECT 		*
FROM 		EMPLOYEES e 
WHERE 		SALARY >= 4000
AND 		SALARY <=8000
ORDER BY 	SALARY DESC;

-- salary = 6500, salary = 7700, salary = 13000
-- in
SELECT 	CONCAT( CONCAT(FIRST_NAME,' '), LAST_NAME) name , SALARY 
FROM 	EMPLOYEES e 
WHERE 	SALARY IN (6500,7700,13000)
ORDER BY SALARY;

SELECT 	CONCAT( CONCAT(FIRST_NAME,' '), LAST_NAME) name, SALARY 
FROM 	EMPLOYEES e 
WHERE 	SALARY =6500
OR 		SALARY =7700
OR 		SALARY = 13000
ORDER BY SALARY ;


-- like
SELECT CONCAT( CONCAT(FIRST_NAME,' '), LAST_NAME) name 
FROM EMPLOYEES e 
WHERE FIRST_NAME LIKE 'D%'
ORDER BY FIRST_NAME 
;


SELECT CONCAT( CONCAT(FIRST_NAME,' '), LAST_NAME) name 
FROM EMPLOYEES e 
WHERE FIRST_NAME LIKE '%d'
ORDER BY FIRST_NAME 
;

SELECT CONCAT( CONCAT(FIRST_NAME,' '), LAST_NAME) name 
FROM EMPLOYEES e 
WHERE FIRST_NAME LIKE '%d%'
ORDER BY FIRST_NAME 
;


-- is null : null인 경우
SELECT 	CONCAT( CONCAT(FIRST_NAME,' '), LAST_NAME) 이름 , COMMISSION_PCT 
FROM 	EMPLOYEES e 
WHERE	COMMISSION_PCT IS NULL
;

-- is not null :null 이 아닌 경우
SELECT 	CONCAT( CONCAT(FIRST_NAME,' '), LAST_NAME) 이름 , COMMISSION_PCT 
FROM 	EMPLOYEES e 
WHERE	COMMISSION_PCT IS NOT NULL
;

-- 합계: sum
SELECT 	sum(SALARY) 
FROM 	EMPLOYEES e 
;

-- count
SELECT 	COUNT(*)
FROM	EMPLOYEES e ;

SELECT 	COUNT(COMMISSION_PCT)
FROM	EMPLOYEES e ;

-- distinct, count
SELECT 	count(DISTINCT COMMISSION_PCT) AS "commiCNT"
FROM 	EMPLOYEES e ;

SELECT 	count(COMMISSION_PCT) 
FROM 	EMPLOYEES e ;

-- employees 테이블에서 firstname 의 개수와 중복을 제거한 first name count를 조회
SELECT 	count(FIRST_NAME) AS nameCNT, count(DISTINCT FIRST_NAME) AS distinctNameCNT
FROM 	EMPLOYEES e ;

-- avg : 평균 
SELECT 	avg(SALARY) 
FROM 	EMPLOYEES e 
;

-- department_id = 80 번인 급여평균
SELECT 	avg(SALARY)
FROM 	EMPLOYEES e 
WHERE 	DEPARTMENT_ID = 80
;

-- 최대값 
SELECT 	max(SALARY)
FROM 	EMPLOYEES e 
;

SELECT 	max(HIRE_DATE)
FROM 	EMPLOYEES e 
;

-- 최소값
SELECT 	min(SALARY)
FROM 	EMPLOYEES e 
;

SELECT 	min(HIRE_DATE)
FROM 	EMPLOYEES e 
;

-- abs() : 절대값
SELECT 	abs(-23)
FROM	dual;


SELECT 	SYSDATE 
FROM	dual;


--round : 반올림
SELECT 	ROUND(0.123), ROUND(0.5452), ROUND(2.512) 
FROM	dual;



-- 절삭: trunc()
SELECT 	TRUNC(1234.1232145)
FROM 	dual;

SELECT 	TRUNC(1234.1232145,2)
FROM 	dual;

SELECT 	TRUNC(1234.1232145,0)
FROM 	dual;

SELECT 	TRUNC(1234.1232145,-1)
FROM 	dual;